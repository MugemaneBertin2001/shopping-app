/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package org.example;

import java.time.LocalTime;

import utils.classes.AuthManager;
import utils.classes.CreditCardPayment;
import utils.classes.InventoryManager;
import utils.classes.Laptop;
import utils.classes.Order;
import utils.classes.PayPalPayment;
import utils.classes.Phone;
import utils.classes.ShippingDepartment;
import utils.classes.ShoppingCart;

public class App {
    public String getGreeting() {
        int currentHour = LocalTime.now().getHour();
        String greeting;

        if (currentHour < 12) {
            greeting = "Good morning!";
        } else if (currentHour < 18) {
            greeting = "Good afternoon!";
        } else {
            greeting = "Good evening!";
        }

        return greeting;
    }

    public static void main(String[] args) {
        System.out.println(new App().getGreeting());
        demonstrateSingletonBehavior();
        demonstrateShoppingCart();
        demonstrateOrderObservers();
        demonstrateLaptop();
        demonstratePhone();
     }
 
      private static void demonstrateSingletonBehavior() {
         AuthManager manager1 = AuthManager.getInstance();
         AuthManager manager2 = AuthManager.getInstance();
         System.out.println("Checking if both AuthManager instances are the same: " + (manager1 == manager2));
     }
 
     private static void demonstrateShoppingCart() {
        ShoppingCart cart = new ShoppingCart();
        
        // Credit Card Payment
        CreditCardPayment creditCardPayment = new CreditCardPayment("1234 5678 9012 3456", "John Doe", "123");
        cart.setPaymentStrategy(creditCardPayment);
        cart.checkout(1500.0);
        System.out.println("Credit card payment message: " + creditCardPayment.getMsg());
    
        // PayPal Payment
        PayPalPayment payPalPayment = new PayPalPayment("user@example.com", "password");
        cart.setPaymentStrategy(payPalPayment); // Corrected: passing payPalPayment object as an argument
        cart.checkout(1500.0);
        System.out.println("PayPal payment message: " + payPalPayment.getMsg());
    }
    
     private static void demonstrateOrderObservers() {
         Order order = new Order("ORD123", 1500.0);
         InventoryManager inventoryManager = new InventoryManager();
         ShippingDepartment shippingDepartment = new ShippingDepartment();
         order.addObserver(inventoryManager);
         order.addObserver(shippingDepartment);
         order.notifyObservers();
         System.out.println("Inventory Manager Message: " + inventoryManager.getLastMessage());
         System.out.println("Shipping Department Message: " + shippingDepartment.getLastMessage());
     }

     private static void demonstratePhone() {
        Phone phone = new Phone("iPhone 12", 999.0);
        System.out.println("Phone Details:");
        System.out.println(phone.getDescription());
    }
    private static void demonstrateLaptop() {
        Laptop laptop = new Laptop("Dell XPS", 1500.0);
        System.out.println("Laptop Details:");
        System.out.println(laptop.getDescription());
    }

}
